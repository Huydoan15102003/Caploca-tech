"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.loadBundleAsync = void 0;
const NativeDevSplitBundleLoader_1 = __importDefault(require("react-native/Libraries/Utilities/NativeDevSplitBundleLoader"));
const loadBundlePolyfill_1 = require("./loadBundlePolyfill");
function loadBundleAsync(bundlePath) {
    if (
    // NOTE(EvanBacon): This is broken on iOS afaict
    NativeDevSplitBundleLoader_1.default === null || NativeDevSplitBundleLoader_1.default === void 0 ? void 0 : NativeDevSplitBundleLoader_1.default.loadBundle) {
        return NativeDevSplitBundleLoader_1.default.loadBundle(bundlePath).catch((e) => {
            // On Android 'e' is not an instance of Error, which seems to be a bug.
            // As a workaround, re-throw an Error to not break the error handling code.
            throw new Error(e.message);
        });
    }
    return (0, loadBundlePolyfill_1.loadBundleAsync)(bundlePath);
}
exports.loadBundleAsync = loadBundleAsync;
//# sourceMappingURL=loadBundle.android.js.map