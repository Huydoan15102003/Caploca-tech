{"version":3,"file":"loadBundle.android.js","sourceRoot":"","sources":["../../src/async-require/loadBundle.android.ts"],"names":[],"mappings":";;;;;;AAAA,6HAAqG;AAErG,6DAAkF;AAElF,SAAgB,eAAe,CAAC,UAAkB;IAChD;IACE,gDAAgD;IAChD,oCAA0B,aAA1B,oCAA0B,uBAA1B,oCAA0B,CAAE,UAAU,EACtC;QACA,OAAO,oCAA0B,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE;YACnE,uEAAuE;YACvE,2EAA2E;YAC3E,MAAM,IAAI,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;QAC7B,CAAC,CAAC,CAAC;KACJ;IACD,OAAO,IAAA,oCAAuB,EAAC,UAAU,CAAC,CAAC;AAC7C,CAAC;AAZD,0CAYC","sourcesContent":["import NativeDevSplitBundleLoader from \"react-native/Libraries/Utilities/NativeDevSplitBundleLoader\";\n\nimport { loadBundleAsync as loadBundlePolyfillAsync } from \"./loadBundlePolyfill\";\n\nexport function loadBundleAsync(bundlePath: string): Promise<any> {\n  if (\n    // NOTE(EvanBacon): This is broken on iOS afaict\n    NativeDevSplitBundleLoader?.loadBundle\n  ) {\n    return NativeDevSplitBundleLoader.loadBundle(bundlePath).catch((e) => {\n      // On Android 'e' is not an instance of Error, which seems to be a bug.\n      // As a workaround, re-throw an Error to not break the error handling code.\n      throw new Error(e.message);\n    });\n  }\n  return loadBundlePolyfillAsync(bundlePath);\n}\n"]}